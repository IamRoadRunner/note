安装virtualenv
-p指定python版本
--no-site-packages:不适用系统的包
--system-site-packages:可以访问系统包
--distribute :copy一个python环境分支

windows
	virtualenv envname
	cd envname
	Script\activate

linux
	virtualenv envname
	cd envname
	source ./bin/activate
	退出使用deactivate

克隆项目，切换分支，在虚拟环境中pip install -i requirement.txt安装模块。
supervisor配置文件中加上配置内容，指定连接地址端口（1）等信息，来管理项目。
[program:aptm-test]
command=/var/www/aptm-test/aptm/env/bin/gunicorn aptm.wsgi --chdir /var/www/aptm-test/aptm -b 127.0.0.1:5000 --timeout 120 -w 4
user=www-data
autostart=true
autorestart=true
worker_class=gevent
redirect_stderr=true


项目目录：
/var/www

部署步骤：
source aptm-env/bin/activate指定源进入虚拟环境。
cd aptm

supervisorctl
> stop aptm (ctrl+c) 根据配置来启动项目。

git pull origin develop
(密码：jac75lin)
./manage.py collectstatic
./manage.py migrate(如果需要)

supervisorctl
> start aptm

nginx
下载包，需要的模块
解压之后cd进去, .configure --prefix[以前的额目录] --add-module xxx --add-module yyy
如果之前安装过就把 objs/nginx 复制到原来的目录sbin/ 
可以-c指定配置文件

修改conf/nginx.conf 
{
	使用limit_req_zone,limit_conn_zone限制连接数，并发数
	$args,$remote_addr,
	if (这里可以使用正则匹配来做条件)==，!=,~*,!~*
	proxy_pass 这里写supervisor配置文件中定义的地址和端口（1）nginx listen 的端口是另一个。这里只是代理。
}
 server {
        listen       5050;
        #listen [::]:80 ipv6only=on;
        server_name  10.7.1.34:5050;
        client_max_body_size  100m;

        location / {      

           # root   html;
           # index  index.html index.htm;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
        }


	location = /acc/cuslog/{
  	   limit_conn TotalConnLimitZone_ip 100;
           limit_req zone=ConnLimitZone_ip nodelay;
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
	}


	location = /app/eventinfo/{
  	   limit_conn TotalConnLimitZone_ip 100;
           limit_req zone=ConnLimitZone_ip burst=10 nodelay;

	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
	}
	#页面跳转
	location ^~ /static/m/views/ {
	if ($cookie_sessionid !~* [0-9a-z]+)
	{
	    rewrite .* /static/m/views/login.html redirect;
	}
	   limit_conn TotalConnLimitZone_sess 20;
	   limit_req zone=ConnLimitZone_sess nodelay;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000; 
	}

	location = /static/m/views/login.html {
	   limit_conn TotalConnLimitZone_ip 15;
           limit_req zone=ConnLimitZone_ip burst=10 nodelay;
	 #   缓存设置
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
	}
	
	location  /app/ {
#       访问接口时判断是否登录
              if ($cookie_sessionid !~* [0-9a-z]+) {
#              #       rewrite ^(.*)$  http://127.0.0.1:5000/static/m/views/login.html redirect;
                      return 302;
              }
           limit_conn TotalConnLimitZone_sess 20;
           limit_req zone=ConnLimitZone_sess nodelay;
       

           # 缓存设置
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
	}

        location ~* /app/(detail/houses|unit|houselist)/ {
           # 缓存设置
           proxy_cache cache;
           proxy_cache_valid 200 3s;
           proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
           proxy_cache_methods GET;
           proxy_cache_lock on;

           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
        }

        location ~* /app/houseinfo/ {
           # 缓存设置
           proxy_cache cache;
           proxy_cache_valid 200 1s;
           proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
           proxy_cache_methods GET;
           proxy_cache_lock on;

           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_redirect off;
           proxy_read_timeout 120;
           proxy_send_timeout 1200;
           proxy_pass http://127.0.0.1:5000;
        }


        location /media/ {
            root /var/www/aptm-test/aptm/;
        }

        location /static/ {
           alias /var/www/aptm-test/aptm/public/;
        }
        error_page   500 502 503 504  /50x.html;

        location = /50x.html {
            root   html;
        }

	}





#         limit_req zone=ConnLimitZone_token burst=5 nodelay;
#          rewrite_by_lua '
#          local random = ngx.var.cookie_random
#          if (random == nil) then
#              random = math.random(999999)
#          end 
#                   
#          local token = ngx.md5(ngx.var.remote_addr..random)
#           if (ngx.var.cookie_token ~= token) then
#               ngx.header["Set-Cookie"] = {"token="..token,"random="..random}
#          end 
#        ';


开放端口iptables -I INPUT -p tct --dport 开放的端口号 -j ACCEPT
