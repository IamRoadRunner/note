硬件抽象层,
	为客户机操作系统呈现和硬件相同或相近的硬件抽象层.
系统层,
	操作系统内核提供多个相互隔离的用户态实例.
函数库层,应用层.

通过虚拟化层(vmm)的模拟来提供独立的虚拟机执行环境

   虚拟机  
     |
虚拟硬件抽象层,
     |
  虚拟化层
(硬件抽象层)
    硬件
x86平台
	需要基于软件(bt)实现完全虚拟化.
	类虚拟化技术修改操作系统源码与vmm软件协同工作.
	vt,svm,硬件辅助的完全虚拟化.操作系统不需要做修改.
x86 内存架构
物理地址空间,由cpu实现的物理地址位数所决定.内存和其他硬件设备等可用资源分布在cpu的物理地址空间内.
线性地址空间,有cpu实现的线性地址位数所决定,为了让多个程序能够有效相互隔离和使用物理地址空间的资源.
地址
逻辑地址,程序直接使用的地址.比如指针.
线性地址,又称为虚拟地址,用于索引线性地址空间.
物理地址,是cpu提交到总线用于访问资源的最终地址.
分段,分页未启用:逻辑地址>线性地址=物理地址
分段,分页启用:逻辑地址>线性地址>物理地址
内存管理机制
分段机制
是内存管理机制,将内存划分成以起始地址,长度描述的块称为段.
分段机制:逻辑地址(包含段选择符),段选择起存器,段描述符(段的基地址,长度,各种属性)->如果合法将可根据段描述符将逻辑地址转换成线性地址,段描述符表.
段选择符.  索引(index),描述符表(t1),权限级别(rpl)  //6个段寄存器
段描述符. cpu将段描述符中32位的基地址和逻辑地址中32位偏移量相加得到对应的线性地址. //对程序不可见,段描述符寄存器.
段描述符表,
	gdt,系统中至少有一个,可以被所有进程访问.是内存中的一个数据结构,(基地址,长度)
	ldt,系统中可以有一个或多个可以被某个进程私有.是一个段,需要描述符(存放gdt)描述,
	
分页机制
是更加粒度化的内存管理机制,用页来管理线性地址空间和物理地址空间,
页表
线性地址对应的页帧号叫虚拟页帧号,物理地址对应的页帧号叫物理页帧号,
页表存储从虚拟页帧号到物理页帧号映射的数据结构.
目录|表|偏移
页目录中存放页目录项(4B,包含页表的物理地址),cpu使用线性地址22-31位索引页目录.
页表项(4B)存放在页表中,



































